---
title: "PS4"
format:
  html:
    code-overflow: wrap
    embed-resources: true
    theme: simplex
---

## Problem 1

First, we install and load the package nzelect. I have commented off the line where I install the package so it wouldn't run again. I also load the tidyverse library
```{r}
# rm(list=ls())

# install.packages("nzelect")
library(nzelect)
data(nzge)

library(tidyverse)
```

a. Generate a table (which can just be a nicely printed tibble) of vote count (regardless of party) per year/type. Make sure to sort it by vote count.
```{r}
nzge %>%
  group_by(election_year, voting_type) %>%
  summarise(total_votes = sum(votes)) %>%
  arrange(-total_votes)
```

b. Focus only on the 2014 election. Report the proportion of votes for each party in the Candidate election. Again, produce a nice table and sort it by percent of vote. 
```{r}
nzge %>%
  filter(election_year == 2014, voting_type == "Candidate") %>%
  group_by(party) %>%
  summarise(total_votes = sum(votes)) %>%
  mutate(prop_votes = round(100*total_votes/sum(total_votes), 3)) %>%
  arrange(-prop_votes) %>%
  select(-total_votes)
```

c.Produce a nice table indicating, for each year, which party won the Candidate vote and which party won the Party vote.
```{r}
nzge %>%
  group_by(election_year, voting_type, party) %>%
  summarise(total_votes = sum(votes)) %>%
  group_by(election_year, voting_type) %>%
  filter(total_votes == max(total_votes)) %>%
  select(election_year, voting_type, party) %>%
  pivot_wider(names_from = voting_type, values_from = party)
```

## Problem 2

First, let's load the data.
``` {r}
atp_matches <- read.csv("data/atp_matches_2019.csv")
head(atp_matches)
colnames(atp_matches)
```

a. How many tournaments took place in 2019?
128 tournaments took place in 2019. 
### OFFICE HOURS: does this mean the the number of tournaments in the dataset, or specifically those with tourney_date beginning with 2019?
``` {r}
atp_matches %>%
  group_by(tourney_id) %>%
  summarise() %>%
  summarise(n())
```

b. Did any player win more than one tournament? If so, how many players won more than one tournament, and how many tournaments did the most winning player(s) win?
``` {r}

```

c. Is there any evidence that winners have more aces than losers? (If you address this with a hypothesis test, do not use base R functionality - continue to remain in the Tidyverse.)
``` {r}
```

d. Identify the player(s) with the highest win-rate. (Note that this is NOT asking for the highest number of wins.) Restrict to players with at least 5 matches.
``` {r}
```

## Problem 3

In this first code chunk for problem 3, I load the ggplot2 library and the data. Currently, the "date" variable is a character variable, so I change the it to be of type Date.
``` {r}
library(ggplot2)

us_states <- read.csv("data/us-states.csv")
head(us_states)
us_states$date <- as.Date(us_states$date)
```

a. How many major and minor spikes in cases were there?
``` {r fig.width=8, fig.height=6}
us_states_date <- us_states %>%
  group_by(date) %>%
  summarise(total_cases = sum(cases))
  
us_states_week <- us_states %>%
  mutate(week = floor_date(date, "week")) %>%
  group_by(week) %>%
  summarise(cases_week_avg = sum(cases) / 7)

ggplot(us_states_date, aes(x = date, y = total_cases)) +
  geom_point(color="darkgray", alpha=0.5) +
  geom_line(data=us_states_week, aes(x = week, y = cases_week_avg, color = cases_week_avg), linewidth = 1.2) +
  scale_color_viridis_c(option = "inferno", direction = -1, name = "Average Cases Per Week") +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    legend.key.width = unit(3, "cm")
  ) +
  guides(color = guide_colorbar(title.position = "top"))
```

b. For the states with the highest and lowest overall rates per population, what differences do you see in their trajectories over time?
``` {r}
us_states_rate <- us_states %>%
  group_by(state) %>%
  summarise(rate = mean(cases_avg_per_100k)) %>%
  arrange(-rate)

head(us_states_rate, 1)
tail(us_states_rate, 1)
```
``` {r}
ggplot(us_states, aes(x = date, y = cases_avg_per_100k)) +
  geom_point(color = "darkgray", alpha = 0.3) +
  geom_point(data = us_states[us_states$state == "American Samoa", ], aes(color = "American Samoa")) + 
  geom_point(data = us_states[us_states$state == "Maryland", ], aes(color = "Maryland")) + 
  scale_color_manual(
    name = "States with Highest & Lowest Overall Rates",
    values = c(
      "American Samoa" = "tomato",
      "Maryland" = "slateblue"
    )
  ) +
  theme_minimal() + 
  theme(legend.position = "bottom")
```

c. Identify, to the best of your ability without a formal test, the first five states to experience Covid in a substantial way.
``` {r fig.width=8, fig.height=8}
us_states_start <- us_states %>%
  filter(date > as.Date("2020-03-20"), 
         date < as.Date("2020-04-20"),
         cases_avg_per_100k > 15)

ggplot(us_states_start, aes(x = date, y = cases_avg_per_100k, color=state)) +
  geom_line(linewidth = 1) + 
  xlim(as.Date("2020-03-20"), as.Date("2020-04-20")) +
  ylim(15, 60) +
  scale_color_brewer(palette = "Set3") + 
  theme_minimal() +
  theme(legend.position = "bottom")
```


## Attribution of Sources

- Monthly summary with tidyverse: https://stackoverflow.com/questions/6052631/aggregate-daily-data-to-month-year-intervals

- Viridis colors: https://ggplot2.tidyverse.org/reference/scale_viridis.html